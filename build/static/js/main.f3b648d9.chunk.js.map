{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"sMAIMA,EAAe,CACpBC,OAAQ,CACPC,KAAM,uBACNC,SAAU,OAEXC,OAAQ,CACPF,KAAM,oBACNC,SAAU,cA4BGE,EAbO,SAACC,GACtB,IAZkBC,EAAKC,EAYjBC,GAZYF,EAYOD,EAAMC,KAZRC,GAYa,IAAIE,MAAOC,YAVnC,GAAKH,EAAQ,EACjBD,EAAM,EAAI,SAAW,SAIrBA,EAAM,EAAI,SAAW,UAM7B,EAA2BP,EAAaS,GAAhCP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAEd,OACC,sBAAKS,UAAS,yBAAoBH,GAAlC,UACC,mBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,6BAAKD,IACL,mBAAGU,UAAS,6BAAwBT,EAAxB,eChCTU,EAAU,SAACP,GAChB,OACC,qBAAKM,UAAU,mBAAf,SACC,qBAAKA,UAAU,qBAAf,SAAqCN,EAAMQ,aAM9CD,EAAQE,aAAe,CACtBD,QAAS,eAGKD,QCTTG,E,4MAELC,MAAQ,CAAEV,IAAK,KAAMW,aAAc,I,uDAGnC,WAAqB,IAAD,OACnBC,OAAOC,UAAUC,YAAYC,oBAE5B,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAEjB,IAAKgB,EAASE,OAAOC,cACnD,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,2BAK7C,WACC,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IACnC,0CAAaqB,KAAKX,MAAMC,iBAE3BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IAEzC,8BACC,cAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,QAI3B,cAAC,EAAD,CAASO,QAAQ,qC,oBAIzB,WACC,OAAO,qBAAKF,UAAU,aAAf,SAA6BgB,KAAKC,sB,GA9BzBC,IAAMC,WAmCxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.f3b648d9.chunk.js","sourcesContent":["import './SeasonDisplay.css'\r\nimport React from 'react'\r\n\r\n// config\r\nconst seasonConfig = {\r\n\tsummer: {\r\n\t\ttext: \"Let's hit the beach!\",\r\n\t\ticonName: 'sun',\r\n\t},\r\n\twinter: {\r\n\t\ttext: \"Burr, it's chilly\",\r\n\t\ticonName: 'snowflake',\r\n\t},\r\n}\r\n\r\nconst getSeason = (lat, month) => {\r\n\t// hemosphere\r\n\tif (month > 2 && month < 9) {\r\n\t\treturn lat > 0 ? 'summer' : 'winter'\r\n\t}\r\n\t// southernshpere\r\n\telse {\r\n\t\treturn lat > 0 ? 'winter' : 'summer'\r\n\t}\r\n}\r\n\r\nconst SeasonDisplay = (props) => {\r\n\tconst season = getSeason(props.lat, new Date().getMonth())\r\n\tconst { text, iconName } = seasonConfig[season]\r\n\r\n\treturn (\r\n\t\t<div className={`season-display ${season}`}>\r\n\t\t\t<i className={`icon-left massive ${iconName} icon`} />\r\n\t\t\t<h1>{text}</h1>\r\n\t\t\t<i className={`icon-right massive ${iconName} icon`} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SeasonDisplay\r\n","import React from 'react'\r\n\r\nconst Spinner = (props) => {\r\n\treturn (\r\n\t\t<div className=\"ui active dimmer\">\r\n\t\t\t<div className=\"ui big text loader\">{props.message}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// defalut Props\r\nSpinner.defaultProps = {\r\n\tmessage: 'Loading ...',\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport SeasonDisplay from './SeasonDisplay'\r\nimport Spinner from './Spinner'\r\n\r\n// Class based components always extend React.Component\r\nclass App extends React.Component {\r\n\t// initializing the state\r\n\tstate = { lat: null, errorMessage: '' }\r\n\r\n\t// loading data\r\n\tcomponentDidMount() {\r\n\t\twindow.navigator.geolocation.getCurrentPosition(\r\n\t\t\t// setState will update component\r\n\t\t\t(position) => this.setState({ lat: position.coords.latitude }),\r\n\t\t\t(err) => this.setState({ errorMessage: err.message }),\r\n\t\t)\r\n\t}\r\n\r\n\t// regular function with if condtions so it will return component\r\n\trenderContent() {\r\n\t\tif (this.state.errorMessage && !this.state.lat) {\r\n\t\t\treturn <div>Error: {this.state.errorMessage}</div>\r\n\t\t}\r\n\t\tif (!this.state.errorMessage && this.state.lat) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SeasonDisplay lat={this.state.lat} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn <Spinner message=\"Please accept location request\" />\r\n\t}\r\n\r\n\t// rendering will happen here\r\n\trender() {\r\n\t\treturn <div className=\"border red\">{this.renderContent()}</div>\r\n\t}\r\n}\r\n\r\n// changing html file by #root\r\nReactDOM.render(<App />, document.querySelector('#root'))\r\n"],"sourceRoot":""}